{{- $stageNames := list "dev" "test" "int" "acc" "prod" -}}
{{- $stageColor := list "lime" "green" "yellow" "orange" "red" -}}
{{- $appDict := dict -}}
{{- range $stageNameIndex, $stageName := $stageNames -}}
  {{- $stageNameSuffix := printf "-%s" $stageName -}}
  {{- $stageColor := index $stageColor $stageNameIndex -}}
  {{- range $app, $value := $.Values.applications -}}
    {{- if $value.customAppConfig }}{{- if $value.customAppConfig.kargo }}{{- if $value.customAppConfig.kargo.images }}{{- if gt (len $value.customAppConfig.kargo.images) 0 }}
      {{- $kargoName := $value.customAppConfig.kargo.name -}}
      {{- if hasSuffix $stageNameSuffix $app }}
        {{- $applicationStages := index $appDict $kargoName | default list -}}
        {{- $name := trimPrefix (printf "%s-" $kargoName) $app }}
        {{- $stage := dict "name" $name "appName" $app "kargoName" $kargoName "value" $value "stageName" $stageName "stageColor" $stageColor -}}
        {{- if eq (len $applicationStages) 0 }}
          {{- $stage = merge $stage (dict "watchWarehouse" true) -}}
        {{- end -}}
        {{- $applicationStages = append $applicationStages $stage -}}
        {{- $appDict = mergeOverwrite $appDict (dict $kargoName $applicationStages) -}}
      {{- end -}}
    {{- end -}}
  {{- end -}}{{- end -}}{{- end -}}{{- end -}}
{{- end -}}

{{- range $project, $stages := $appDict -}}
---
apiVersion: v1
kind: Namespace
metadata:
  name: {{ $project }}-stages
  labels:
    kargo.akuity.io/project: "true"
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ $project }}-stages
  namespace: {{ $project }}-stages
  labels:
    kargo.akuity.io/secret-type: repository
stringData:
  type: git
  url: "{{ $.Values.repository }}"
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: {{ $project }}-stages
  namespace: {{ $project }}-stages
spec:
  data:
    - remoteRef:
        conversionStrategy: Default
        decodingStrategy: None
        key: /github/token
      secretKey: password
    - remoteRef:
        conversionStrategy: Default
        decodingStrategy: None
        key: /github/username
      secretKey: username
  refreshInterval: 1h
  secretStoreRef:
    kind: ClusterSecretStore
    name: akeyless
  target:
    creationPolicy: Merge
    deletionPolicy: Delete
---
{{ $previousStage := dict }}
{{- range $index, $stage := $stages -}}
  {{- if ne (len $previousStage) 0 -}}
    {{- $potentialPrevious := index $stages (sub $index 1) -}}
    {{- if ne $potentialPrevious.stageName $stage.stageName -}}
      {{- $previousStage = $potentialPrevious -}}
    {{- end -}}
  {{- else -}}
    {{- $previousStage = $stage -}}
  {{- end -}}

apiVersion: kargo.akuity.io/v1alpha1
kind: Stage
metadata:
  name: {{ $stage.name }}
  namespace: {{ $project }}-stages
  annotations:
    kargo.akuity.io/color: {{ $stage.stageColor }}
spec:
{{- if eq $index 0 }}
  subscriptions:
    warehouse: {{ $project }}
{{- else }}
  subscriptions:
    upstreamStages:
      - name: {{ $previousStage.name }}
{{- end }}
  promotionMechanisms:
    argoCDAppUpdates:
      - appName: {{ $stage.appName }}
        appNamespace: argocd
    gitRepoUpdates:
      - repoURL: {{ $.Values.repository }}
        writeBranch: master
        helm:
          images:
           {{- range $image := $stage.value.customAppConfig.kargo.images }}
            - image: {{ $image.image }}
              valuesFilePath: {{ $stage.appName }}/values.yaml
              key: {{ $image.key }}
              value: Tag
          {{- end }}
---
{{- if $stage.value.customAppConfig.kargo.autoPromote }}
apiVersion: kargo.akuity.io/v1alpha1
kind: PromotionPolicy
metadata:
  name: {{ $stage.name }}
  namespace: {{ $project }}-stages
stage: {{ $stage.name }}
enableAutoPromotion: true
---
{{- end }}
{{- if eq $index 0 }}
apiVersion: kargo.akuity.io/v1alpha1
kind: Warehouse
metadata:
  name: {{ $project }}
  namespace: {{ $project }}-stages
spec:
  subscriptions:
{{- range $image := $stage.value.customAppConfig.kargo.images }}
    - image:
        repoURL: {{ $image.image }}
{{- end }}
#    - git:
#        repoURL: {{ $.Values.repository }}
{{- end }}
---
{{ end -}}
{{- end -}}
